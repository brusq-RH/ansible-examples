---
- name: Provisioning some AWS stuff
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - secret.yml

  tasks:
    - name: Find the current windows AMI in region
      ec2_ami_facts:
        filters:
          name: Windows_Server-2012-R2_RTM-English-64Bit-Base-*
        owner: amazon
        region: "{{ ec2_region }}"
      register: found_amis

    - set_fact:
        win_ami_id: "{{ (found_amis.images | last ).image_id }}"

    - name: Provision a set of instances
      ec2: 
        group: "{{ ec2_security_group }}"
        type: "{{ ec2_instance_type }}"
        image: "{{ win_ami_id }}"
        region: "{{ ec2_region }}"
        instance_tags: "{'ansible_group':'windows_webservers_phillyair', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'demo_phillyair'}"
        exact_count: "{{ ec2_instance_count }}"
        count_tag: 
           Name: demo_phillyair
        wait: true
        user_data: "{{ lookup('template', 'userdata.txt.j2') }}"
      register: ec2

      tags:
        - web

    - debug: var=ec2

    - name: Wait for the WinRM to answer on all of the hosts
      wait_for:
        port: 5986
        host: "{{ item.public_ip }}"
        timeout: 300
      with_items: '{{ec2.tagged_instances}}'

    - name: Add the instances to the web and production groups
      add_host: hostname={{ item.public_dns_name }} groups=web,production
      with_items: '{{ec2.tagged_instances}}'

- name: Do something with those instances
  hosts: web:&production
  connection: winrm
#  gather_facts: False
 
  vars_files:
    - secret.yml

  tasks:
    - name: install nginx
      win_chocolatey:
        name: nginx
        state: present
        version: "{{ nginx_version }}"

    - name: install nssm
      win_chocolatey:
        name: nssm
        state: present

   - name: install nginx as service
     win_nssm:
       name: nginx
       application: 'C:\ProgramData\chocolatey\lib\nginx\tools\nginx-{{ nginx_version }}\nginx.exe'
       app_parameters_free_form: '-c C:\ProgramData\chocolatey\lib\nginx\tools\nginx-{{ nginx_version }}\conf\nginx.conf -p C:\ProgramData\chocolatey\lib\nginx\tools\nginx-{{ nginx_version }}'
       stdout_file: C:\nginx_out.txt
       stderr_file: C:\nginx_error.txt
       start_mode: auto
       state: started
     notify:
       - start nginx

   - name: Firewall rule to allow HTTP on TCP port 80
     win_firewall_rule:
       name: HTTP
       localport: 80
       action: allow
       direction: in
       protocol: tcp
       state: present
       enabled: yes


  handlers:
   - name: start nginx
     win_service:
       name: nginx
       state: started

