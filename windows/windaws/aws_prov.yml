---
- name: Provisioning some AWS stuff
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - secret.yml

  tasks:
    - name: Find the current windows AMI in region
      ec2_ami_find:
        region: "{{ ec2_region }}"
        platform: windows
        virtualization_type: hvm
        owner: amazon
        name: Windows_Server-2012-R2_RTM-English-64Bit-Base-*
        no_result_action: fail
        sort: name
        sort_order: descending
      register: found_amis

    - set_fact:
        win_ami_id: "{{ (found_amis.results | first).ami_id }}"

    - name: Provision a set of instances
      ec2: 
        keypair: "{{ ec2_keypair }}"
        group: "{{ ec2_security_group }}"
        type: "{{ ec2_instance_type }}"
        image: "{{ win_ami_id }}"
        region: "{{ ec2_region }}"
        instance_tags: "{'ansible_group':'windows_webservers', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'demo_''{{ tower_user_name }}'}"
        exact_count: "{{ ec2_instance_count }}"
        count_tag: Name
        wait: true
        user_data: "{{ lookup('template', 'userdata.txt.j2') }}"
      register: ec2

      tags:
        - web

    - debug: var=ec2

    - name: Wait for the WinRM to answer on all of the hosts
      wait_for:
        port: 5986
        host: "{{ item.public_ip }}"
        timeout: 300
      with_items: ec2.tagged_instances

    - name: Add the instances to the web and production groups
      add_host: hostname={{ item.public_dns_name }} groups=web,production
      with_items: ec2.tagged_instances

- name: Do something with those instances
  hosts: web:&production
  connection: winrm
  
  vars_files:
    - secret.yml

  tasks:

  - name: Enable IIS on the servers
    win_feature:
      name: "Web-Server"
      state: present
      restart: yes
      include_sub_features: yes
      include_management_tools: yes

